#!/usr/bin/env python3
"""
Echo stdin to stdout, replacing all instances of:
    current working directory with '.',
    home directory with '~'.
    (whichever yields the shortest result)

Useful for things like converting long dir names in test output tracebacks into
short relative dir names.
"""
import os
import sys


DOT = '.'
TILDE = '~'

COLOR_START = '\033[1;36m'
COLOR_END = '\033[0m'

COLOR_DOT = COLOR_START + DOT + COLOR_END
COLOR_TILDE = COLOR_START + TILDE + COLOR_END


def getDot(useColor):
    return COLOR_DOT if useColor else DOT

def getTilde(useColor):
    return COLOR_TILDE if useColor else TILDE

def transform(line, cwd, home, useColor=False):
    if len(cwd) >= len(home):
        line = line.replace(cwd, getDot(useColor))
        line = line.replace(home, getTilde(useColor))
    else:
        line = line.replace(home, getTilde(useColor))
        line = line.replace(cwd, getDot(useColor))
    return line


def main():

    cwd = os.getcwd()
    if cwd.endswith(os.sep):
        cwd = cwd[:-1]

    home = os.path.expanduser('~')

    for line in sys.stdin:
        print(transform(line[:-1], cwd, home, '--color' in sys.argv))
        sys.stdout.flush()


if __name__ == '__main__':
    sys.exit(main())

